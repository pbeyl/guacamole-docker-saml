####################################################################################
# docker-compose file for Apache Guacamole
# Paul Beyleveld <pbeyleveld at netskope dot com> Jul 2023
# adapted from work by PCFreak 2017-06-28
#
# Apache Guacamole is a clientless remote desktop gateway. It supports standard
# protocols like VNC, RDP, and SSH. We call it clientless because no plugins or
# client software are required. Thanks to HTML5, once Guacamole is installed on
# a server, all you need to access your desktops is a web browser.
#
# Purpose is to ease the configuration of Guacamole for usage with Netskope Private 
# Access. All authentication will leverage an external SAML idP.
#
####################################################################################
#
# What does this file do?
#
# Using docker-compose it will:
#
# - create a network 'guacnetwork_compose' with the 'bridge' driver.
# - create a service 'guacd_compose' from 'guacamole/guacd' connected to 'guacnetwork'
# - create a service 'postgres_guacamole_compose' (1) from 'postgres' connected to 'guacnetwork'
# - create a service 'guacamole_compose' (2)  from 'guacamole/guacamole/' conn. to 'guacnetwork'
# - create a service 'nginx_guacamole_compose' (3) from 'nginx' connected to 'guacnetwork'
#
#
# !!!!! FOR INITAL SETUP (after git clone) run ./configure.sh once
#
# !!!!! FOR A FULL RESET (WILL ERASE YOUR DATABASE, YOUR FILES, YOUR RECORDS AND CERTS) DO A
# !!!!!  ./reset.sh
#
####################################################################################

version: '2.0'

# networks
# create a network 'guacnetwork' in mode 'bridged'
networks:
  guacnetwork:
    driver: bridge

# services
services:
  # guacd
  guacd:
    container_name: guacd
    image: guacamole/guacd
    networks:
      guacnetwork:
    restart: always
    volumes:
    - ./drive:/drive:rw
    - ./record:/record:rw
  # postgres
  postgres:
    container_name: postgres_guacamole
    environment:
      PGDATA: /var/lib/postgresql/data/guacamole
      POSTGRES_DB: guacamole_db
      POSTGRES_PASSWORD: ${PG_PWD}
      POSTGRES_USER: guacamole_user
    image: postgres:13.4-buster
    #verbose logging
    #command: ["postgres", "-c", "log_statement=all"]
    networks:
      guacnetwork:
    restart: always
    volumes:
    - ./init:/docker-entrypoint-initdb.d:z
    - ./data:/var/lib/postgresql/data:Z

  # guacamole
  guacamole:
    container_name: guacamole
    depends_on:
    - guacd
    - postgres
    environment:
      GUACD_HOSTNAME: guacd
      #LOGBACK_LEVEL: 'DEBUG'
      EXTENSION_PRIORITY: 'saml'
      #SKIP_IF_AVAILABLE: saml
      SAML_IDP_METADATA_URL: '${SAML_IDP_METADATA_URL}'
      SAML_IDP_URL: ${SAML_IDP_URL}
      SAML_ENTITY_ID: ${SAML_ENTITY_ID}
      SAML_CALLBACK_URL: ${SAML_ENTITY_ID}
      SAML_GROUP_ATTRIBUTE: 'groups'
      SAML_STRICT: "false"
      SAML_DEBUG: 'true'
      POSTGRES_DATABASE: guacamole_db
      POSTGRES_HOSTNAME: postgres
      POSTGRES_PASSWORD: ${PG_PWD}
      POSTGRES_USER: guacamole_user
      POSTGRESQL_AUTO_CREATE_ACCOUNTS: 'true'
    image: guacamole/guacamole:1.5.2
    links:
    - guacd
    networks:
      guacnetwork:
    ports:
## enable next line if not using nginx
##    - 8080:8080/tcp # Guacamole is on :8080/guacamole, not /.
## enable next line when using nginx
    - 8080/tcp
    restart: always

########### optional ##############
  # nginx
  nginx:
   container_name: nginx_guacamole
   restart: always
   image: nginx
   volumes:
   - ./nginx/ssl/self.cert:/etc/nginx/ssl/self.cert:ro
   - ./nginx/ssl/self-ssl.key:/etc/nginx/ssl/self-ssl.key:ro
   - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
   - ./nginx/mysite.template:/etc/nginx/conf.d/default.conf:ro
   ports:
   - 8443:443
   links:
   - guacamole
   networks:
     guacnetwork:
   # run nginx
   command: /bin/bash -c "nginx -g 'daemon off;'"
# nginx-debug-mode
#   command: /bin/bash -c "nginx-debug -g 'daemon off;'"
####################################################################################
